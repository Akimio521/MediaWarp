name: MediaWarp Releaser

on:
  push:
    branches:
      - main
    paths:
      - core/version.go

env:
  APP_NAME: MediaWarp

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get-version.outputs.app_version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: APP Version
        id: get-version
        run: |
          APP_VERSION=$(cat core/version.go | sed -ne 's/const\sAPP_VERSION\sstring\s=\s"v\(.*\)"/\1/gp')
          echo "检测到版本号为 $APP_VERSION"
          echo "app_version=$APP_VERSION" >> "$GITHUB_OUTPUT"

  docker-builder:
    name: Docker Image Builder
    needs: get-version
    uses: ./.github/workflows/docker-builder.yaml
    with:
      APP_VERSION: ${{ needs.get-version.outputs.app_version }}
      IS_LATEST: true
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  binary-builder:
    name: Binary Image Builder
    needs: get-version
    uses: ./.github/workflows/binary-builder.yaml
    with:
      APP_VERSION: ${{ needs.get-version.outputs.app_version }}

  create-release:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ get-version, docker-builder, binary-builder ]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.APP_NAME }}-v${{ needs.get-version.outputs.app_version }}-*
          merge-multiple: true
          path: ${{ github.workspace }}/bin

      - name: Create Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ needs.get-version.outputs.app_version }}
          tag_name: v${{ needs.get-version.outputs.app_version }}
          body: ${{ github.event.commits[0].message }}
          files: ${{ github.workspace }}/bin/*
          draft: false
          prerelease: false
